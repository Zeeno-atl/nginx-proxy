
lua_shared_dict prometheus_metrics 16M;
lua_package_path "/opt/nginx-lua-prometheus/?.lua;;";

init_worker_by_lua_block {
    prometheus = require("prometheus").init("prometheus_metrics")

    -- Define metrics that are logged by request in the next lua block
    metric_requests = prometheus:counter("requests_total", "Number of HTTP requests", {"host", "status"})
    metric_latency = prometheus:histogram("request_duration_seconds",
        "HTTP request latency", {"host"},
        {0.005, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.2, 0.3, 0.4, 0.5, 0.75,
        1, 1.5, 2, 3, 4, 5, 10, 15, 30, 45, 60, 90, 120, 180, 300})

    -- Define current metrics that are generated on request in the prometheus_location.conf
    metric_connections = prometheus:gauge("connections", "Number of HTTP connections", {"state"})
}

log_by_lua_block {
    -- On each request
    metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
    metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
}
